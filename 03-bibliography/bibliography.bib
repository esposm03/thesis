@inproceedings{engineering-servo,
    author = {Anderson, Brian and Bergstrom, Lars and Goregaokar, Manish and Matthews, Josh and McAllister, Keegan and Moffitt, Jack and Sapin, Simon},
    title = {Engineering the servo web browser engine using Rust},
    year = {2016},
    isbn = {9781450342056},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/2889160.2889229},
    doi = {10.1145/2889160.2889229},
    abstract = {All modern web browsers --- Internet Explorer, Firefox, Chrome, Opera, and Safari --- have a core rendering engine written in C++. This language choice was made because it affords the systems programmer complete control of the underlying hardware features and memory in use, and it provides a transparent compilation model. Unfortunately, this language is complex (especially to new contributors!), challenging to write correct parallel code in, and highly susceptible to memory safety issues that potentially lead to security holes.Servo is a project started at Mozilla Research to build a new web browser engine that preserves the capabilities of these other browser engines but also both takes advantage of the recent trends in parallel hardware and is more memory-safe. We use a new language, Rust, that provides us a similar level of control of the underlying system to C++ but which statically prevents many memory safety issues and provides direct support for parallelism and concurrency.In this paper, we show how a language with an advanced type system can address many of the most common security issues and software engineering challenges in other browser engines, while still producing code that has the same performance and memory profile. This language is also quite accessible to new open source contributors and employees, even those without a background in C++ or systems programming. We also outline several pitfalls encountered along the way and describe some potential areas for future improvement.},
    booktitle = {Proceedings of the 38th International Conference on Software Engineering Companion},
    pages = {81â€“89},
    numpages = {9},
    keywords = {Rust, browser engine, concurrency, parallelism, servo},
    location = {Austin, Texas},
    series = {ICSE '16}
}

@misc{react,
    title = {React: a library for web and native user interfaces},
    url = {https://react.dev},
}

@misc{servo,
    title = {Servo: an experimental browser engine},
    url = {https://servo.org},
}

@misc{taffy,
    title = {Taffy: a flexible, high-performance library for UI layout},
    url = {https://github.com/DioxusLabs/taffy},
}

@misc{tiny-skia,
    title = {Tiny-skia: a tiny Skia subset ported to Rust},
    url = {https://github.com/linebender/tiny-skia},
}

@misc{vello,
    title = {Vello: a GPU compute-centric 2D renderer},
    url = {https://github.com/linebender/vello},
}


@article{gpu-computing,
    author = {Owens, John and Houston, Mike and Luebke, David and Green, Simon and Stone, John and Phillips, James},
    year = {2008},
    month = {05},
    pages = {879-899},
    title = {GPU computing},
    volume = {96},
    journal = {Proceedings of the IEEE},
    doi = {10.1109/JPROC.2008.917757}
}